package glacios.world.gen.layer;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.minecraft.world.biome.BiomeGenBase;
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.IntCache;

public class GenLayerBiomeGlacios extends GenLayer {

    /* This sets all the biomes that are allowed to appear in Glacios. */
    static Map<BiomeGenBase, Integer> rareBiomes = new HashMap<BiomeGenBase, Integer>();
    static List<BiomeGenBase> biomes = new ArrayList<BiomeGenBase>();

    public GenLayerBiomeGlacios(long par1) {
        super(par1);
    }

    public GenLayerBiomeGlacios(long par1, GenLayer genLayer) {
        super(par1);
        parent = genLayer;
    }

    public static void registerBiome(BiomeGenBase biome, int rarity) {
        if (!rareBiomes.containsKey(biome))
            rareBiomes.put(biome, rarity);
    }

    public static void registerBiome(BiomeGenBase biome) {
        if (!biomes.contains(biome))
            biomes.add(biome);
    }

    /*
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    @Override
    public int[] getInts(int par1, int par2, int par3, int par4) {
        int[] biomeList = IntCache.getIntCache(par3 * par4);

        for (int i1 = 0; i1 < par4; ++i1) {
            for (int j1 = 0; j1 < par3; ++j1) {
                initChunkSeed(j1 + par1, i1 + par2);
                boolean flag = true;

                for (Map.Entry<BiomeGenBase, Integer> entry : rareBiomes.entrySet()) {
                    if (nextInt(entry.getValue()) == 0) {
                        biomeList[(j1 + i1 * par3)] = entry.getKey().biomeID;
                        flag = false;
                        break;
                    }
                }

                if (flag)
                    biomeList[(j1 + i1 * par3)] = biomes.get(nextInt(biomes.size())).biomeID;
            }
        }

        return biomeList;
    }

}
